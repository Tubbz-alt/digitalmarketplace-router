{% from "_macros.j2" import proxy_headers with context %}
{% from "_macros.j2" import prepare_trace_header_values with context %}

upstream static_429_error {
    server localhost:10823;
}

server {
    listen 80;
    server_name www.*;
    root {{ static_files_root }};

    {% for user_ip in user_ips.split(",") %}
    allow {{ user_ip }};
    {% endfor %}
    deny all;

{% if rate_limiting_enabled == "enabled" %}
    # Basic rate limiting
    limit_req zone=dm_limit burst=30;
    limit_req zone=dm_post_limit burst=5;

    error_page 429 @too_many_requests;
    location @too_many_requests {
        add_header Retry-After 300 always;

        # Cannot POST to static pages, so proxy to a dedicated server block using GET
        proxy_method GET;
        proxy_pass http://static_429_error;
    }
{% endif %}

    {{ prepare_trace_header_values() }}

    location /robots.txt {
        rewrite ^(.*)$ /robots_www.txt break;
    }

    # Block access to metrics paths
    location ~ /_metrics$ {
        deny all;
    }

    set $frontend_url {{ frontend_url }};

    location ~ (^/admin($|/$|/.+$)) {
        {% for admin_ip in admin_user_ips.split(",") %}
        allow {{ admin_ip }};
        {% endfor %}
        deny all;

        {{ proxy_headers () }}
        proxy_set_header Authorization "Basic {{ app_auth }}";

        proxy_pass $frontend_url$1$is_args$args;
    }

    location ~ (/.*) {
        {{ proxy_headers () }}
        proxy_set_header Authorization "Basic {{ app_auth }}";

        proxy_pass $frontend_url$1$is_args$args;
    }
}

{% if rate_limiting_enabled == "enabled" %}
# Listen on port 10823 and serve a static_429_error page
server {
    listen 10823;
    server_name _;
    root {{ static_files_root }};
    rewrite ^(.*)$ /too_many_requests.html break;
}
{% endif %}
